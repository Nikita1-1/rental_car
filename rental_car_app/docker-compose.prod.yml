version: '3.8'

services:
  redis:
    image: redis:7-alpine 
    container_name: rental_car_redis_t3small
    restart: unless-stopped
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    networks: 
      - rental_car_app_django_network

  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn rental_car.wsgi:application --bind 0.0.0.0:8000 --workers 1 --timeout 120 --max-requests 500 --preload"
    container_name: rental_car_app_web_t3micro
    restart: unless-stopped
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "8000:8000"
    networks:
      - rental_car_app_django_network
    env_file:
      - .env.prod
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          memory: 600M
        reservations:
          memory: 400M

  celery_combined:
    build: .
    container_name: rental_car_celery_combined_t3micro
    restart: unless-stopped
    command: >
      sh -c "celery -A rental_car worker --loglevel=info --concurrency=1 --max-tasks-per-child=100 &
             celery -A rental_car beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler &
             wait"
    volumes:
      - media_volume:/app/mediafiles
    depends_on:
      - redis
      - web
    networks:
      - rental_car_app_django_network
    env_file:
      - .env.prod
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 200M

volumes:
  static_volume:
  media_volume:

networks:
  rental_car_app_django_network:
    driver: bridge
