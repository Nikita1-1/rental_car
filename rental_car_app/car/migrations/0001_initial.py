# Generated by Django 5.1.7 on 2025-05-09 04:49

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
import shortuuid.django_fields
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BabySeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('None', 'None'), ('Infant Seat', 'Infant Seat'), ('Toddler Seat', 'Toddler Seat'), ('Boster Seat', 'Booster Seat')], max_length=20, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=15.0, max_digits=12)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=1000)),
                ('type', models.CharField(choices=[('Percentage', 'Percentage'), ('Flat Rate', 'Flat Rate')], default='Percentage', max_length=100)),
                ('discount', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('redemption', models.IntegerField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('make_public', models.BooleanField(default=False)),
                ('valid_from', models.DateField()),
                ('valid_to', models.DateField()),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery', models.CharField(choices=[('Pick Up', 'Pick Up'), ('Delivery to you', 'Delivery to you')], default='Pick Up', max_length=150)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('desc', models.TextField(blank=True, max_length=200, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='car_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Racks_feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('None', 'None'), ('Ski Rack', 'Ski Rack'), ('Snowboard rack', 'Snowboard Rack'), ('Bike Rack', 'Bike Rack')], default=None, max_length=20, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=15.0, max_digits=12)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet=None, length=8, max_length=10, prefix='', unique=True)),
                ('make', models.CharField(max_length=40)),
                ('model', models.CharField(max_length=60)),
                ('year', models.CharField(max_length=4)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('image', models.FileField(blank=True, null=True, upload_to='car_images/')),
                ('location', models.CharField(max_length=350)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Not Available', 'Not Available'), ('In Review', 'In Review')], default='Available', max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('featured', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('features', models.ManyToManyField(blank=True, to='car.features')),
            ],
        ),
        migrations.CreateModel(
            name='CarGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='car_images/')),
                ('hgid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car.car')),
            ],
            options={
                'verbose_name_plural': 'Car Gallery',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_status', models.CharField(choices=[('paid', 'paid'), ('pending', 'pending'), ('processing', 'processing'), ('cancel', 'cancel'), ('initiated', 'initiated'), ('refunded', 'refunded'), ('refunding', 'refunding'), ('unpaid', 'unpaid'), ('expired', 'expaired'), ('failed', 'failed')], max_length=120)),
                ('total_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('delivery_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('full_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('agreed_to_terms', models.BooleanField(default=False)),
                ('signature', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=150)),
                ('phone', models.CharField(max_length=15)),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('checked_in', models.BooleanField(default=False)),
                ('checked_out', models.BooleanField(default=False)),
                ('checked_in_tracker', models.BooleanField(default=False)),
                ('checked_out_tracker', models.BooleanField(default=False)),
                ('total_days', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('before_discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('saved', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('stripe_payment_intent', models.CharField(blank=True, max_length=150, null=True)),
                ('bid', shortuuid.django_fields.ShortUUIDField(alphabet=None, length=10, max_length=15, prefix='', unique=True)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('booking_id', shortuuid.django_fields.ShortUUIDField(alphabet=None, length=10, max_length=15, prefix='', unique=True)),
                ('success_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz1234567890', length=300, max_length=505, prefix='')),
                ('stripe_payment', models.CharField(blank=True, max_length=1000, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='car.car')),
                ('coupons', models.ManyToManyField(blank=True, related_name='bookings', to='car.coupon')),
            ],
        ),
        migrations.CreateModel(
            name='CouponUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=1000)),
                ('email', models.CharField(max_length=1000)),
                ('mobile', models.CharField(max_length=1000)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car.booking')),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car.coupon')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='FeaturedCar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon_type', models.CharField(blank=True, choices=[('Bootstap Icons', 'Bootstap Icons'), ('Fontawesome Icons', 'Fontawesome Icons')], max_length=80, null=True)),
                ('icon', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car.car')),
            ],
            options={
                'verbose_name_plural': 'Car Features',
            },
        ),
        migrations.CreateModel(
            name='Booking_Features',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prepaid_fuel', models.BooleanField(default=False)),
                ('prepaid_fuel_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('additional_driver', models.BooleanField(default=False)),
                ('flight_number', models.CharField(blank=True, max_length=40, null=True)),
                ('hfid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('baby_seat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='car.babyseat')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_features', to='car.booking')),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='car.delivery')),
                ('racks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='car.racks_feature')),
            ],
        ),
    ]
